apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'idea'
apply plugin: 'maven'

sourceCompatibility = 1.7

repositories { 
	mavenCentral()
}

dependencies {
    compile 'args4j:args4j:2.0.16'
    compile 'net.java.dev.jna:jna:3.3.0'
    compile 'commons-io:commons-io:2.4'
    compile 'org.slf4j:slf4j-api:1.6.6'
    compile 'com.googlecode.java-diff-utils:diffutils:1.3.0'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'org.mockito:mockito-all:1.9.0'
    testCompile 'org.testng:testng:6.8.7'
}

task generateScanSources() {
    String scannerPackage = 'com/blackducksoftware/ohcount4j/scan'
    File scannerSrc = file('src/scanners/ragel')
    File generatedJavaBase = file("src/generated/java")
    File targetBase = file("$generatedJavaBase/$scannerPackage")
    inputs.dir scannerSrc
    outputs.dir generatedJavaBase
    doLast {
        targetBase.mkdirs()
        scannerSrc.eachFile groovy.io.FileType.FILES, { sourceFile ->
            String baseName = sourceFile.getName().replaceAll('\\.java\\.rl$', '.java')
            String source = sourceFile.absolutePath
            if (sourceFile.name.endsWith('.java.rl')) {
                String target = new File(targetBase, baseName).absolutePath
                def proc = "ragel -J -o $target $source".execute(null, scannerSrc)
                proc.in.eachLine {line -> println line}
                proc.err.eachLine {line -> println 'ERROR: ' + line}
                proc.waitFor()
            }
        }
    }
}


sourceSets {
    generated
}

sourceSets.main.java.srcDirs += sourceSets.generated.java.srcDirs

compileJava.dependsOn generateScanSources

clean.dependsOn cleanGenerateScanSources

task sourcesJar(type:Jar){
	from sourceSets.main.allSource
	from sourceSets.generated.allSource
	classifier = 'sources'
}

artifacts { archives sourcesJar }

test {
	useTestNG()
	jacoco{
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpFile = file("$buildDir/jacoco/classpathdumps")
	}
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}

archivesBaseName="${name.replaceAll('\\.', '-').toLowerCase()}"

task wrapper(type: Wrapper) { gradleVersion = '2.10' }
